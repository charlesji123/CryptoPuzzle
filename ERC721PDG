// SPDX-License-Identifier: Princeton
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";

contract puzzleReward is ERC721 {
  uint256 public tokenCounter;
  mapping (uint256 => string) tokenURIs;
  constructor () public ERC721 ("puzzleDog", "PDG"){
    tokenCounter = 0;
  }

  function createCollectible(string memory tokenURI) public returns (uint256) {
    uint256 newItemId = tokenCounter;
    _safeMint(msg.sender, newItemId);
    tokenURIs[newItemId] = tokenURI;
    tokenCounter = tokenCounter + 1;
    return newItemId;
  }

}
